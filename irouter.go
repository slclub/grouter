package grouter

import (
	//"net/http"
	"io"
)

// ====================================================================================
// should move this interface to an Single package. Dont confuse with router.
type Context interface {
	// Extend ParameterArray
	ParameterArray

	Requester
	Responser
}

type Param interface {
	GetKey(string)
	GetValue() string
	Set(key string, value string)
}

type ParamsArray []Param

type ParameterArray interface {
	Get(string) interface{}
	GetString(string) string
	GetAll() []ParamsArray
}

// request from other place.
type Requester interface {
	GetRequest() interface{}
	SetRequest(interface{}) bool
}

// response to client or other server.
type Responser interface {
	GetResponseWriter() io.Writer
	SetpResponseWriter(io.Writer)
}

//====================================================================================
//
type Executer interface {
	Execute(Context)
}

//=====================================================================================

// router haddle func
type HandleFunc func(Context)

type Router interface {
	GetStore() Store
	SetStore(Store)

	Handle(string, string, HandleFunc)
	Executer
}

// router node interface.
// if you overide the node and struct is very different. you should use both the your defined node interface and this node interface.
type Node interface {
	GetPath() string
	SetPath(string)

	GetHandleFunc() HandleFunc
	SetHandleFunc(HandleFunc)

	GetType() uint8
	SetType(uint8)

	GetIndices() string
	SetIndices(string)

	// Get node from children.
	// Overide one of them will be ok.
	GetNodeAuto(interface{}) Node
	GetNodeInt(int) Node
	GetNodeStr(string) Node
	//GetNodes() map[string]Node

	// Add a new node to the childrens.
	AddNode(Node)

	AddKey(string)
	GetKeys() []string

	// lookup path return lasest node and left not valid path
	Lookup(string) (Node, string)
	GetChildren() map[string]Node
}

// Store the nodes generated by url.
type Store interface {
	// save node.
	Save(Node)

	// create an new store
	Create() Store

	// paramter should use url path or method or msgid(int) .
	// look up from store return node.
	// @param	1	string	method or path
	Lookup(string) Node
	CreateNode(int) Node
}
